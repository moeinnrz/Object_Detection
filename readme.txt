##📌 عنوان پروژه:

تشخیص اشیا با yolo (Object Detection)

##🧠 معرفی پروژه:

این پروژه یک نرم‌افزار گرافیکی (GUI) است که با استفاده از مدل YOLO (نسخه YOLOv8) به‌صورت بلادرنگ از طریق دوربین، اشیاء موجود در تصویر را تشخیص می‌دهد و آن‌ها را در یک فریم گرافیکی (داخل برنامه) نمایش می‌دهد. طراحی رابط کاربری این پروژه با استفاده از PyQt5 انجام شده و تمام فرآیند تشخیص تصویر داخل یک QFrame گنجانده شده تا ظاهر حرفه‌ای‌تری به پروژه بدهد.


## 🧠 کاربردها

- نظارت تصویری هوشمند
- تحلیل ویدیوی زنده برای پروژه‌های پژوهشی
- آموزش مفاهیم بینایی ماشین و یادگیری عمیق
- استفاده در پروژه‌های رباتیک و اتوماسیون
- شمارش یا ردیابی اشیاء خاصآموزش و تمرین برای یادگیری مفاهیم بینایی ماشین و رابط گرافیکی با پایتون


## 🔮 در صورت توسعه پروژه

در آینده می‌توان امکانات زیر را به پروژه اضافه کرد:

- ذخیره‌سازی خودکار تصاویر یا ویدیوهای تشخیص‌داده‌شده
- پشتیبانی از چند دوربین هم‌زمان
- نمایش نمودار آماری از اشیاء شناسایی‌شده
- اتصال به اینترنت و ارسال هشدارها (ایمیل، پیام‌رسان و...)
- اعمال فیلتر فقط بر اساس اشیاء خاص (مثلاً فقط انسان یا خودرو)

# 📚 کتابخانه‌های استفاده‌شده

- [`PyQt5`](https://pypi.org/project/PyQt5/) : طراحی رابط گرافیکی
- [`opencv-python`](https://pypi.org/project/opencv-python/) : دریافت فریم دوربین و پردازش تصویر
- [`ultralytics`](https://pypi.org/project/ultralytics/) : مدل YOLOv8 برای تشخیص اشیاء
- `sys` و `QtCore`, `QtGui`, `QtWidgets` : اجزای اصلی برنامه

##📦 نصب پیش‌نیازها:
```
pip install -r requirements.txt
```
```
pip install PyQt5==5.15.11
```
pip install opencv-python
```
```
pip install ultralytics
```


🐍 نسخه‌ی پایتون مورد نیاز:

    ⚠️ توجه: برای اجرای درست پروژه، پایتون نسخه 3.10 یا پایین‌تر استفاده شود.
    نسخه‌های بالاتر (مثل 3.11 یا 3.12) ممکن است با برخی نسخه‌های PyQt یا YOLO ناسازگار باشند.
که فایل اجرایی پاتون رو هم در فایل قرار دادم.

🚀 نحوه اجرای پروژه:

    ابتدا اطمینان حاصل کنید که فایل‌های زیر در کنار هم قرار دارند:

        main.py

        main.ui (اگر استفاده شده باشد)

        فایل مدل YOLO (مثل yolov8n.pt) — در صورت نیاز آن را از سایت Ultralytics دانلود کنید.

    اجرای برنامه:

python main.py


✨ طراحی ظاهری:

    استفاده از QFrame با پس‌زمینه تیره و حاشیه گرد

    اجرای تصویر زنده‌ی مدل YOLO داخل رابط گرافیکی

    دکمه‌های "Start" برای شروع پردازش و "Quit" برای خروج کامل از برنامه
